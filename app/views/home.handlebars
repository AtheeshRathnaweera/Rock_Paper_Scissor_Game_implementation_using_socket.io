<div class="body-holder">
  <div class="user-search-holder">
    <form class="search-user-form">
      <div class="col-auto">
        <div class="input-group">
          <input type="text" class="form-control" id="inlineFormInputGroup" placeholder="Search user">
          <div class="input-group-prepend">
            <div class="input-group-text">
              <img src="/icons/search.png" />
            </div>
          </div>
        </div>
      </div>
    </form>
  </div>

  <div class="users-section">
    <div class="row" style="margin: 0 !important; padding: 0 !important;" id="users-row">

      <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12 user-card">
        <div class="card text-center">
          <div class="card-body">
            <img src="/img/avatar-pack/bat.png" alt="Avatar" class="avatar">

            <h5 class="card-title">Special title treatment</h5>
            <p class="card-text">12/9</p>
            <a href="#" class="btn btn-success">Go somewhere</a>
          </div>
        </div>
      </div>

    </div>

  </div>

</div>

<script src="https://cdn.socket.io/3.1.3/socket.io.min.js"
  integrity="sha384-cPwlPLvBTa3sKAgddT6krw0cJat7egBga3DJepJyrLl4Q9/5WLra3rrnMcyTyOnh" crossorigin="anonymous"></script>

<script>
  //ui
  var navBarHeight = $(".navbar").height();
  var docHeight = $(document).height();

  var usersRow = $("#users-row");

  console.log("nav bar height : " + navBarHeight);
  console.log("doc height : " + docHeight);

  $(".body-holder").css("margin-top", navBarHeight);

  var URL = "{{server_url}}";
  var USER_NAME = "{{session.user_name}}";
  var CONNECTION_ID = '';

  var socket = io(URL, {
    query: {
      user_name: USER_NAME
    },
    reconnection: true,
    reconnectionAttempts: 10
  });

  socket.auth = { username: USER_NAME };
  socket.connect();

  socket.on("connect", () => {
    console.log("new socket id : " + socket.id);

    CONNECTION_ID = socket.id;
  });

  // handle the event sent with socket.emit()
  socket.on("greetings", (message) => {
    console.log("greetings : " + message);
  });

  socket.on("connect_error", (err) => {
    console.log("connection error " + err.message);
  });

  socket.on("disconnect", () => {
    console.log("disconnected"); // undefined
  });

  socket.on("disconnected-forever", (message) => {
    console.log("disconnected-forever : " + message);
    $("#logout-form").submit();
  });

  socket.on("connection-pool-update", (data) => {
    console.log("connection pool update : " + data.pool.length);
    usersRow.empty();

    data.pool.forEach(function (item) {
      usersRow.append('<div class="col-lg-3 col-md-4 col-sm-6 col-xs-12 user-card"><div class="card text-center"><div class="card-body"><img src="/img/avatar-pack/'+item.avatar_name+'" alt="Avatar" class="avatar"><h5 class="card-title">'+item.user_name+'</h5><p class="card-text">12/9</p><a href="#" class="btn btn-success">Go somewhere</a></div></div></div>');
    });

  });

  socket.on("old-connection-alert",(data)=>{
    console.log("Old connection ended alert : "+JSON.stringify(data));
  });

  function logout() {
    socket.emit("logout", { "user_name": USER_NAME, "connection_id": CONNECTION_ID });
    $("#logout-form").submit();
  }

</script>